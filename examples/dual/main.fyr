type S struct {
	value int
}

type G<X> struct {
	value X
}

/*
// ERR: `dual` is used outside of a dual function
func *S.Wrong() dual *S {
    return nil
}
*/

func dual *S.IAmDual() dual *S {
    return this
}

func dual *G.IAmDual() dual *G {
    return this
}

func *G.Value() X {
    return this.value
}

func Main() {
	var s1 mut *S = {}
	var s2 mut *S = s1.IAmDual()
	var s3 *S = {}
	var s4 *S = s3.IAmDual()

    var g1 mut *G<int> = {}
	var g2 mut *G<int> = g1.IAmDual()
	var g3 *G<int> = {}
	var g4 *G<int> = g3.IAmDual()

	println("Ok")
}
