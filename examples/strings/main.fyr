type S struct {
	name string
}

func test1() {
	println("Hello World")
	println("Hübsch mit Umlauten")
	callMe("I called you")
	println("Übung")
	var s1 *S = {name: "See you"}
	var s2 *S = {name: s1.name}
	if groupOf(s1) != groupOf(s2) {
		panic("Must be same group")
	}
	if groupOf(s1) == 0 || groupOf(s2) == 0 {
		panic("No group attached")
	}
	if groupOf("Some string") != 0 {
		panic("String literals have a null group")
	}
	if groupOf(s1.name) != groupOf(s1) {
		panic("String fields in a struct must have a non-zero group")
	}
	var str = "Dummy"
	if groupOf(str) != 0 {
		panic("String variables have a null group")
	}
	str2 := str + " User"
	if len(str2) != 10 {
		panic("Wrong length")
	}
	println(str2)
	buffer := new[] byte(0, 100)
	buffer = append(buffer, ..."Hallo ")
	welt := "Welt"
	buffer = append(buffer, ...welt)
	if len(buffer) != 10 {
		panic("Wrong length")
	}
	str3 := `string(buffer)
	if len(str3) != 10 {
		panic("Wrong length")
	}
	println(str3)
	println("Ok")
}

func callMe(s string) {
	println("CallMe()")
	println(s)
}

func test2() {
	str := "Test2"
	var arr []byte = `[]byte(str)
	if len(arr) != 5 {
		panic("Wrong length")
	}
	str2 := `string(arr)
	println(str2)
}

func Main() {
	println("test1 ...")
	test1()
	println("test2 ...")
	test2()
	println("Ok")
}
